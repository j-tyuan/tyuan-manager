package org.tyuan.service.dao.mapper;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.tyuan.service.data.model.OAuth2Params;
import org.tyuan.service.data.model.OAuth2ParamsExample;

public interface OAuth2ParamsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_params
     *
     * @mbg.generated
     */
    @SelectProvider(type=OAuth2ParamsSqlProvider.class, method="countByExample")
    long countByExample(OAuth2ParamsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_params
     *
     * @mbg.generated
     */
    @DeleteProvider(type=OAuth2ParamsSqlProvider.class, method="deleteByExample")
    int deleteByExample(OAuth2ParamsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_params
     *
     * @mbg.generated
     */
    @Delete({
        "delete from oauth2_params",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_params
     *
     * @mbg.generated
     */
    @Insert({
        "insert into oauth2_params (id, create_time, ",
        "update_time, enabled, ",
        "user_id)",
        "values (#{id,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP}, #{enabled,jdbcType=BIT}, ",
        "#{userId,jdbcType=VARCHAR})"
    })
    int insert(OAuth2Params record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_params
     *
     * @mbg.generated
     */
    @InsertProvider(type=OAuth2ParamsSqlProvider.class, method="insertSelective")
    int insertSelective(OAuth2Params record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_params
     *
     * @mbg.generated
     */
    @SelectProvider(type=OAuth2ParamsSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="enabled", property="enabled", jdbcType=JdbcType.BIT),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR)
    })
    List<OAuth2Params> selectByExample(OAuth2ParamsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_params
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, create_time, update_time, enabled, user_id",
        "from oauth2_params",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="enabled", property="enabled", jdbcType=JdbcType.BIT),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR)
    })
    OAuth2Params selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_params
     *
     * @mbg.generated
     */
    @UpdateProvider(type=OAuth2ParamsSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") OAuth2Params record, @Param("example") OAuth2ParamsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_params
     *
     * @mbg.generated
     */
    @UpdateProvider(type=OAuth2ParamsSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") OAuth2Params record, @Param("example") OAuth2ParamsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_params
     *
     * @mbg.generated
     */
    @UpdateProvider(type=OAuth2ParamsSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(OAuth2Params record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_params
     *
     * @mbg.generated
     */
    @Update({
        "update oauth2_params",
        "set create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "enabled = #{enabled,jdbcType=BIT},",
          "user_id = #{userId,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(OAuth2Params record);
}