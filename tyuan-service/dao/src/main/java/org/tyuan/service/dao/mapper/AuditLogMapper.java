package org.tyuan.service.dao.mapper;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.tyuan.service.data.model.AuditLog;
import org.tyuan.service.data.model.AuditLogExample;
import org.tyuan.service.data.model.AuditLogWithBLOBs;

public interface AuditLogMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table audit_log
     *
     * @mbg.generated
     */
    @SelectProvider(type=AuditLogSqlProvider.class, method="countByExample")
    long countByExample(AuditLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table audit_log
     *
     * @mbg.generated
     */
    @DeleteProvider(type=AuditLogSqlProvider.class, method="deleteByExample")
    int deleteByExample(AuditLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table audit_log
     *
     * @mbg.generated
     */
    @Delete({
        "delete from audit_log",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table audit_log
     *
     * @mbg.generated
     */
    @Insert({
        "insert into audit_log (id, create_time, ",
        "update_time, user_id, ",
        "user_name, action_type, ",
        "action_status, action_data, ",
        "action_failure_details)",
        "values (#{id,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=VARCHAR}, ",
        "#{userName,jdbcType=VARCHAR}, #{actionType,jdbcType=VARCHAR}, ",
        "#{actionStatus,jdbcType=VARCHAR}, #{actionData,jdbcType=LONGVARCHAR}, ",
        "#{actionFailureDetails,jdbcType=LONGVARCHAR})"
    })
    int insert(AuditLogWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table audit_log
     *
     * @mbg.generated
     */
    @InsertProvider(type=AuditLogSqlProvider.class, method="insertSelective")
    int insertSelective(AuditLogWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table audit_log
     *
     * @mbg.generated
     */
    @SelectProvider(type=AuditLogSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="action_type", property="actionType", jdbcType=JdbcType.VARCHAR),
        @Result(column="action_status", property="actionStatus", jdbcType=JdbcType.VARCHAR),
        @Result(column="action_data", property="actionData", jdbcType=JdbcType.LONGVARCHAR),
        @Result(column="action_failure_details", property="actionFailureDetails", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<AuditLogWithBLOBs> selectByExampleWithBLOBs(AuditLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table audit_log
     *
     * @mbg.generated
     */
    @SelectProvider(type=AuditLogSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="action_type", property="actionType", jdbcType=JdbcType.VARCHAR),
        @Result(column="action_status", property="actionStatus", jdbcType=JdbcType.VARCHAR)
    })
    List<AuditLog> selectByExample(AuditLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table audit_log
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, create_time, update_time, user_id, user_name, action_type, action_status, ",
        "action_data, action_failure_details",
        "from audit_log",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="action_type", property="actionType", jdbcType=JdbcType.VARCHAR),
        @Result(column="action_status", property="actionStatus", jdbcType=JdbcType.VARCHAR),
        @Result(column="action_data", property="actionData", jdbcType=JdbcType.LONGVARCHAR),
        @Result(column="action_failure_details", property="actionFailureDetails", jdbcType=JdbcType.LONGVARCHAR)
    })
    AuditLogWithBLOBs selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table audit_log
     *
     * @mbg.generated
     */
    @UpdateProvider(type=AuditLogSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") AuditLogWithBLOBs record, @Param("example") AuditLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table audit_log
     *
     * @mbg.generated
     */
    @UpdateProvider(type=AuditLogSqlProvider.class, method="updateByExampleWithBLOBs")
    int updateByExampleWithBLOBs(@Param("record") AuditLogWithBLOBs record, @Param("example") AuditLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table audit_log
     *
     * @mbg.generated
     */
    @UpdateProvider(type=AuditLogSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") AuditLog record, @Param("example") AuditLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table audit_log
     *
     * @mbg.generated
     */
    @UpdateProvider(type=AuditLogSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(AuditLogWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table audit_log
     *
     * @mbg.generated
     */
    @Update({
        "update audit_log",
        "set create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "user_id = #{userId,jdbcType=VARCHAR},",
          "user_name = #{userName,jdbcType=VARCHAR},",
          "action_type = #{actionType,jdbcType=VARCHAR},",
          "action_status = #{actionStatus,jdbcType=VARCHAR},",
          "action_data = #{actionData,jdbcType=LONGVARCHAR},",
          "action_failure_details = #{actionFailureDetails,jdbcType=LONGVARCHAR}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKeyWithBLOBs(AuditLogWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table audit_log
     *
     * @mbg.generated
     */
    @Update({
        "update audit_log",
        "set create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "user_id = #{userId,jdbcType=VARCHAR},",
          "user_name = #{userName,jdbcType=VARCHAR},",
          "action_type = #{actionType,jdbcType=VARCHAR},",
          "action_status = #{actionStatus,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(AuditLog record);
}