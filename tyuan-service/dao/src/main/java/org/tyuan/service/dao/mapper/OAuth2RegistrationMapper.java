package org.tyuan.service.dao.mapper;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.tyuan.service.data.model.OAuth2Registration;
import org.tyuan.service.data.model.OAuth2RegistrationExample;

public interface OAuth2RegistrationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_registration
     *
     * @mbg.generated
     */
    @SelectProvider(type=OAuth2RegistrationSqlProvider.class, method="countByExample")
    long countByExample(OAuth2RegistrationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_registration
     *
     * @mbg.generated
     */
    @DeleteProvider(type=OAuth2RegistrationSqlProvider.class, method="deleteByExample")
    int deleteByExample(OAuth2RegistrationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_registration
     *
     * @mbg.generated
     */
    @Delete({
        "delete from oauth2_registration",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_registration
     *
     * @mbg.generated
     */
    @Insert({
        "insert into oauth2_registration (id, create_time, ",
        "update_time, client_id, ",
        "client_secret, authorization_uri, ",
        "token_uri, scope, ",
        "platforms, user_info_uri, ",
        "user_name_attribute_name, jwk_set_uri, ",
        "client_authentication_method, login_button_label, ",
        "login_button_icon, allow_user_creation, ",
        "activate_user, type, ",
        "basic_email_attribute_key, basic_first_name_attribute_key, ",
        "basic_last_name_attribute_key, basic_tenant_name_strategy, ",
        "basic_tenant_name_pattern, basic_customer_name_pattern, ",
        "basic_default_dashboard_name, basic_always_full_screen, ",
        "custom_url, custom_username, ",
        "custom_password, custom_send_token, ",
        "additional_info)",
        "values (#{id,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP}, #{clientId,jdbcType=VARCHAR}, ",
        "#{clientSecret,jdbcType=VARCHAR}, #{authorizationUri,jdbcType=VARCHAR}, ",
        "#{tokenUri,jdbcType=VARCHAR}, #{scope,jdbcType=VARCHAR}, ",
        "#{platforms,jdbcType=VARCHAR}, #{userInfoUri,jdbcType=VARCHAR}, ",
        "#{userNameAttributeName,jdbcType=VARCHAR}, #{jwkSetUri,jdbcType=VARCHAR}, ",
        "#{clientAuthenticationMethod,jdbcType=VARCHAR}, #{loginButtonLabel,jdbcType=VARCHAR}, ",
        "#{loginButtonIcon,jdbcType=VARCHAR}, #{allowUserCreation,jdbcType=BIT}, ",
        "#{activateUser,jdbcType=BIT}, #{type,jdbcType=VARCHAR}, ",
        "#{basicEmailAttributeKey,jdbcType=VARCHAR}, #{basicFirstNameAttributeKey,jdbcType=VARCHAR}, ",
        "#{basicLastNameAttributeKey,jdbcType=VARCHAR}, #{basicTenantNameStrategy,jdbcType=VARCHAR}, ",
        "#{basicTenantNamePattern,jdbcType=VARCHAR}, #{basicCustomerNamePattern,jdbcType=VARCHAR}, ",
        "#{basicDefaultDashboardName,jdbcType=VARCHAR}, #{basicAlwaysFullScreen,jdbcType=BIT}, ",
        "#{customUrl,jdbcType=VARCHAR}, #{customUsername,jdbcType=VARCHAR}, ",
        "#{customPassword,jdbcType=VARCHAR}, #{customSendToken,jdbcType=BIT}, ",
        "#{additionalInfo,jdbcType=LONGVARCHAR})"
    })
    int insert(OAuth2Registration record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_registration
     *
     * @mbg.generated
     */
    @InsertProvider(type=OAuth2RegistrationSqlProvider.class, method="insertSelective")
    int insertSelective(OAuth2Registration record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_registration
     *
     * @mbg.generated
     */
    @SelectProvider(type=OAuth2RegistrationSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="client_id", property="clientId", jdbcType=JdbcType.VARCHAR),
        @Result(column="client_secret", property="clientSecret", jdbcType=JdbcType.VARCHAR),
        @Result(column="authorization_uri", property="authorizationUri", jdbcType=JdbcType.VARCHAR),
        @Result(column="token_uri", property="tokenUri", jdbcType=JdbcType.VARCHAR),
        @Result(column="scope", property="scope", jdbcType=JdbcType.VARCHAR),
        @Result(column="platforms", property="platforms", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_info_uri", property="userInfoUri", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_name_attribute_name", property="userNameAttributeName", jdbcType=JdbcType.VARCHAR),
        @Result(column="jwk_set_uri", property="jwkSetUri", jdbcType=JdbcType.VARCHAR),
        @Result(column="client_authentication_method", property="clientAuthenticationMethod", jdbcType=JdbcType.VARCHAR),
        @Result(column="login_button_label", property="loginButtonLabel", jdbcType=JdbcType.VARCHAR),
        @Result(column="login_button_icon", property="loginButtonIcon", jdbcType=JdbcType.VARCHAR),
        @Result(column="allow_user_creation", property="allowUserCreation", jdbcType=JdbcType.BIT),
        @Result(column="activate_user", property="activateUser", jdbcType=JdbcType.BIT),
        @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_email_attribute_key", property="basicEmailAttributeKey", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_first_name_attribute_key", property="basicFirstNameAttributeKey", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_last_name_attribute_key", property="basicLastNameAttributeKey", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_tenant_name_strategy", property="basicTenantNameStrategy", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_tenant_name_pattern", property="basicTenantNamePattern", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_customer_name_pattern", property="basicCustomerNamePattern", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_default_dashboard_name", property="basicDefaultDashboardName", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_always_full_screen", property="basicAlwaysFullScreen", jdbcType=JdbcType.BIT),
        @Result(column="custom_url", property="customUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="custom_username", property="customUsername", jdbcType=JdbcType.VARCHAR),
        @Result(column="custom_password", property="customPassword", jdbcType=JdbcType.VARCHAR),
        @Result(column="custom_send_token", property="customSendToken", jdbcType=JdbcType.BIT),
        @Result(column="additional_info", property="additionalInfo", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<OAuth2Registration> selectByExampleWithBLOBs(OAuth2RegistrationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_registration
     *
     * @mbg.generated
     */
    @SelectProvider(type=OAuth2RegistrationSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="client_id", property="clientId", jdbcType=JdbcType.VARCHAR),
        @Result(column="client_secret", property="clientSecret", jdbcType=JdbcType.VARCHAR),
        @Result(column="authorization_uri", property="authorizationUri", jdbcType=JdbcType.VARCHAR),
        @Result(column="token_uri", property="tokenUri", jdbcType=JdbcType.VARCHAR),
        @Result(column="scope", property="scope", jdbcType=JdbcType.VARCHAR),
        @Result(column="platforms", property="platforms", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_info_uri", property="userInfoUri", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_name_attribute_name", property="userNameAttributeName", jdbcType=JdbcType.VARCHAR),
        @Result(column="jwk_set_uri", property="jwkSetUri", jdbcType=JdbcType.VARCHAR),
        @Result(column="client_authentication_method", property="clientAuthenticationMethod", jdbcType=JdbcType.VARCHAR),
        @Result(column="login_button_label", property="loginButtonLabel", jdbcType=JdbcType.VARCHAR),
        @Result(column="login_button_icon", property="loginButtonIcon", jdbcType=JdbcType.VARCHAR),
        @Result(column="allow_user_creation", property="allowUserCreation", jdbcType=JdbcType.BIT),
        @Result(column="activate_user", property="activateUser", jdbcType=JdbcType.BIT),
        @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_email_attribute_key", property="basicEmailAttributeKey", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_first_name_attribute_key", property="basicFirstNameAttributeKey", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_last_name_attribute_key", property="basicLastNameAttributeKey", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_tenant_name_strategy", property="basicTenantNameStrategy", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_tenant_name_pattern", property="basicTenantNamePattern", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_customer_name_pattern", property="basicCustomerNamePattern", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_default_dashboard_name", property="basicDefaultDashboardName", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_always_full_screen", property="basicAlwaysFullScreen", jdbcType=JdbcType.BIT),
        @Result(column="custom_url", property="customUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="custom_username", property="customUsername", jdbcType=JdbcType.VARCHAR),
        @Result(column="custom_password", property="customPassword", jdbcType=JdbcType.VARCHAR),
        @Result(column="custom_send_token", property="customSendToken", jdbcType=JdbcType.BIT)
    })
    List<OAuth2Registration> selectByExample(OAuth2RegistrationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_registration
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, create_time, update_time, client_id, client_secret, authorization_uri, token_uri, ",
        "scope, platforms, user_info_uri, user_name_attribute_name, jwk_set_uri, client_authentication_method, ",
        "login_button_label, login_button_icon, allow_user_creation, activate_user, type, ",
        "basic_email_attribute_key, basic_first_name_attribute_key, basic_last_name_attribute_key, ",
        "basic_tenant_name_strategy, basic_tenant_name_pattern, basic_customer_name_pattern, ",
        "basic_default_dashboard_name, basic_always_full_screen, custom_url, custom_username, ",
        "custom_password, custom_send_token, additional_info",
        "from oauth2_registration",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="client_id", property="clientId", jdbcType=JdbcType.VARCHAR),
        @Result(column="client_secret", property="clientSecret", jdbcType=JdbcType.VARCHAR),
        @Result(column="authorization_uri", property="authorizationUri", jdbcType=JdbcType.VARCHAR),
        @Result(column="token_uri", property="tokenUri", jdbcType=JdbcType.VARCHAR),
        @Result(column="scope", property="scope", jdbcType=JdbcType.VARCHAR),
        @Result(column="platforms", property="platforms", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_info_uri", property="userInfoUri", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_name_attribute_name", property="userNameAttributeName", jdbcType=JdbcType.VARCHAR),
        @Result(column="jwk_set_uri", property="jwkSetUri", jdbcType=JdbcType.VARCHAR),
        @Result(column="client_authentication_method", property="clientAuthenticationMethod", jdbcType=JdbcType.VARCHAR),
        @Result(column="login_button_label", property="loginButtonLabel", jdbcType=JdbcType.VARCHAR),
        @Result(column="login_button_icon", property="loginButtonIcon", jdbcType=JdbcType.VARCHAR),
        @Result(column="allow_user_creation", property="allowUserCreation", jdbcType=JdbcType.BIT),
        @Result(column="activate_user", property="activateUser", jdbcType=JdbcType.BIT),
        @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_email_attribute_key", property="basicEmailAttributeKey", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_first_name_attribute_key", property="basicFirstNameAttributeKey", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_last_name_attribute_key", property="basicLastNameAttributeKey", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_tenant_name_strategy", property="basicTenantNameStrategy", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_tenant_name_pattern", property="basicTenantNamePattern", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_customer_name_pattern", property="basicCustomerNamePattern", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_default_dashboard_name", property="basicDefaultDashboardName", jdbcType=JdbcType.VARCHAR),
        @Result(column="basic_always_full_screen", property="basicAlwaysFullScreen", jdbcType=JdbcType.BIT),
        @Result(column="custom_url", property="customUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="custom_username", property="customUsername", jdbcType=JdbcType.VARCHAR),
        @Result(column="custom_password", property="customPassword", jdbcType=JdbcType.VARCHAR),
        @Result(column="custom_send_token", property="customSendToken", jdbcType=JdbcType.BIT),
        @Result(column="additional_info", property="additionalInfo", jdbcType=JdbcType.LONGVARCHAR)
    })
    OAuth2Registration selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_registration
     *
     * @mbg.generated
     */
    @UpdateProvider(type=OAuth2RegistrationSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") OAuth2Registration record, @Param("example") OAuth2RegistrationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_registration
     *
     * @mbg.generated
     */
    @UpdateProvider(type=OAuth2RegistrationSqlProvider.class, method="updateByExampleWithBLOBs")
    int updateByExampleWithBLOBs(@Param("record") OAuth2Registration record, @Param("example") OAuth2RegistrationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_registration
     *
     * @mbg.generated
     */
    @UpdateProvider(type=OAuth2RegistrationSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") OAuth2Registration record, @Param("example") OAuth2RegistrationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_registration
     *
     * @mbg.generated
     */
    @UpdateProvider(type=OAuth2RegistrationSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(OAuth2Registration record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_registration
     *
     * @mbg.generated
     */
    @Update({
        "update oauth2_registration",
        "set create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "client_id = #{clientId,jdbcType=VARCHAR},",
          "client_secret = #{clientSecret,jdbcType=VARCHAR},",
          "authorization_uri = #{authorizationUri,jdbcType=VARCHAR},",
          "token_uri = #{tokenUri,jdbcType=VARCHAR},",
          "scope = #{scope,jdbcType=VARCHAR},",
          "platforms = #{platforms,jdbcType=VARCHAR},",
          "user_info_uri = #{userInfoUri,jdbcType=VARCHAR},",
          "user_name_attribute_name = #{userNameAttributeName,jdbcType=VARCHAR},",
          "jwk_set_uri = #{jwkSetUri,jdbcType=VARCHAR},",
          "client_authentication_method = #{clientAuthenticationMethod,jdbcType=VARCHAR},",
          "login_button_label = #{loginButtonLabel,jdbcType=VARCHAR},",
          "login_button_icon = #{loginButtonIcon,jdbcType=VARCHAR},",
          "allow_user_creation = #{allowUserCreation,jdbcType=BIT},",
          "activate_user = #{activateUser,jdbcType=BIT},",
          "type = #{type,jdbcType=VARCHAR},",
          "basic_email_attribute_key = #{basicEmailAttributeKey,jdbcType=VARCHAR},",
          "basic_first_name_attribute_key = #{basicFirstNameAttributeKey,jdbcType=VARCHAR},",
          "basic_last_name_attribute_key = #{basicLastNameAttributeKey,jdbcType=VARCHAR},",
          "basic_tenant_name_strategy = #{basicTenantNameStrategy,jdbcType=VARCHAR},",
          "basic_tenant_name_pattern = #{basicTenantNamePattern,jdbcType=VARCHAR},",
          "basic_customer_name_pattern = #{basicCustomerNamePattern,jdbcType=VARCHAR},",
          "basic_default_dashboard_name = #{basicDefaultDashboardName,jdbcType=VARCHAR},",
          "basic_always_full_screen = #{basicAlwaysFullScreen,jdbcType=BIT},",
          "custom_url = #{customUrl,jdbcType=VARCHAR},",
          "custom_username = #{customUsername,jdbcType=VARCHAR},",
          "custom_password = #{customPassword,jdbcType=VARCHAR},",
          "custom_send_token = #{customSendToken,jdbcType=BIT},",
          "additional_info = #{additionalInfo,jdbcType=LONGVARCHAR}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKeyWithBLOBs(OAuth2Registration record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oauth2_registration
     *
     * @mbg.generated
     */
    @Update({
        "update oauth2_registration",
        "set create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "client_id = #{clientId,jdbcType=VARCHAR},",
          "client_secret = #{clientSecret,jdbcType=VARCHAR},",
          "authorization_uri = #{authorizationUri,jdbcType=VARCHAR},",
          "token_uri = #{tokenUri,jdbcType=VARCHAR},",
          "scope = #{scope,jdbcType=VARCHAR},",
          "platforms = #{platforms,jdbcType=VARCHAR},",
          "user_info_uri = #{userInfoUri,jdbcType=VARCHAR},",
          "user_name_attribute_name = #{userNameAttributeName,jdbcType=VARCHAR},",
          "jwk_set_uri = #{jwkSetUri,jdbcType=VARCHAR},",
          "client_authentication_method = #{clientAuthenticationMethod,jdbcType=VARCHAR},",
          "login_button_label = #{loginButtonLabel,jdbcType=VARCHAR},",
          "login_button_icon = #{loginButtonIcon,jdbcType=VARCHAR},",
          "allow_user_creation = #{allowUserCreation,jdbcType=BIT},",
          "activate_user = #{activateUser,jdbcType=BIT},",
          "type = #{type,jdbcType=VARCHAR},",
          "basic_email_attribute_key = #{basicEmailAttributeKey,jdbcType=VARCHAR},",
          "basic_first_name_attribute_key = #{basicFirstNameAttributeKey,jdbcType=VARCHAR},",
          "basic_last_name_attribute_key = #{basicLastNameAttributeKey,jdbcType=VARCHAR},",
          "basic_tenant_name_strategy = #{basicTenantNameStrategy,jdbcType=VARCHAR},",
          "basic_tenant_name_pattern = #{basicTenantNamePattern,jdbcType=VARCHAR},",
          "basic_customer_name_pattern = #{basicCustomerNamePattern,jdbcType=VARCHAR},",
          "basic_default_dashboard_name = #{basicDefaultDashboardName,jdbcType=VARCHAR},",
          "basic_always_full_screen = #{basicAlwaysFullScreen,jdbcType=BIT},",
          "custom_url = #{customUrl,jdbcType=VARCHAR},",
          "custom_username = #{customUsername,jdbcType=VARCHAR},",
          "custom_password = #{customPassword,jdbcType=VARCHAR},",
          "custom_send_token = #{customSendToken,jdbcType=BIT}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(OAuth2Registration record);
}